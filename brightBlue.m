function [BW,maskedRGBImage] = brightBlue(RGB,IMIN,IMAX)
%createMask  Threshold RGB image using auto-generated code from colorThresholder app.
%  [BW,MASKEDRGBIMAGE] = createMask(RGB) thresholds image RGB using
%  auto-generated code from the colorThresholder app. The colorspace and
%  range for each channel of the colorspace were set within the app. The
%  segmentation mask is returned in BW, and a composite of the mask and
%  original RGB images is returned in maskedRGBImage.

% Auto-generated by colorThresholder app on 21-Jul-2022
%------------------------------------------------------

% Convert RGB image to chosen color space
I = rgb2hsv(RGB);

if exist('IMIN') && exist('IMAX')
    
    % Define thresholds for channel 1 based on histogram settings
    channel1Min = IMIN(1);
    channel1Max = IMAX(1);
    
    % Define thresholds for channel 2 based on histogram settings
    channel2Min = IMIN(2);
    channel2Max = IMAX(2);
    
    % Define thresholds for channel 3 based on histogram settings
    channel3Min = IMIN(3);
    channel3Max = IMAX(3);
    
else
    
    % Define thresholds for channel 1 based on histogram settings
    channel1Min = 0.654;
    channel1Max = 0.677;
    
    % Define thresholds for channel 2 based on histogram settings
    channel2Min = 0.611;
    channel2Max = 1.000;
    
    % Define thresholds for channel 3 based on histogram settings
    channel3Min = 0.597;
    channel3Max = 0.936;
    
end

% Create mask based on chosen histogram thresholds
sliderBW = (I(:,:,1) >= channel1Min ) & (I(:,:,1) <= channel1Max) & ...
    (I(:,:,2) >= channel2Min ) & (I(:,:,2) <= channel2Max) & ...
    (I(:,:,3) >= channel3Min ) & (I(:,:,3) <= channel3Max);
BW = sliderBW;

% Initialize output masked image based on input image.
maskedRGBImage = RGB;

% Set background pixels where BW is false to zero.
maskedRGBImage(repmat(~BW,[1 1 3])) = 0;

end
